locals {

  # Generate an ID for a capability by taking the workspace name
  # and trimming it to a maximum of 20 characters. The workspace
  # name is generated by the terraform provider an includes the
  # resource name plus extra random characters on the end. We
  # keep the random characters to ensure uniqueness, but trim
  # the rest of the name to keep name lengths down to something
  # manageable.
  capability_id        = var.capability_id
  capability_workspace = terraform.workspace
  capability_prefix    = replace(length(local.capability_workspace) <= 16 ? local.capability_workspace : "${substr(local.capability_workspace, 0, 10)}${substr(local.capability_workspace, -6, -1)}", "/-+/", "-")

  application_name = [for name, value in module.param_environments.values : value if endswith(name, "/application_name") && value.parts[5] == var.environment_name][0].value
  workload_name    = [for name, value in module.param_environments.values : value if endswith(name, "/workload_name") && value.parts[5] == var.environment_name][0].value
  sg_name          = [for name, value in module.param_environments.values : value if endswith(name, "/security_group_name") && value.parts[5] == var.environment_name][0].value
  sg_id            = [for name, value in module.param_environments.values : value if endswith(name, "/security_group_id") && value.parts[5] == var.environment_name][0].value
  # admin_role_arn   might or might not be set in param store as not all the envs have it set. Therefore we use "try"
  admin_role_arn   = try([for name, value in module.param_environments.values : value if endswith(name, "/admin_role_arn") && value.parts[5] == var.environment_name][0].value, "")

  workload_param  = [for name, value in module.param_workloads.values : value if endswith(name, "/account-id") && value.parts[5] == local.workload_name][0]
  account_id      = local.workload_param.value
  workload_estate = local.workload_param.environment
  workload_region = local.workload_param.region
  cloudwatch_log_retention = local.workload_estate == "nonprod" ? 7 : 30

  workload_amp_endpoint = [for name, value in module.param_workloads.values : value if endswith(name, "/amp_endpoint") && value.parts[5] == local.workload_name][0].value

  management_securitygroup_id   = [for name, value in module.param_workloads.values : value if endswith(name, "/management-sg-id") && value.parts[5] == local.workload_name][0].value
  management_securitygroup_name = [for name, value in module.param_workloads.values : value if endswith(name, "/management-sg-name") && value.parts[5] == local.workload_name][0].value
  ado_agent_securitygroup_id    = [for name, value in module.param_workloads.values : value if endswith(name, "/ado-agent-sg-id") && value.parts[5] == local.workload_name][0].value

  vpc_id           = try(data.aws_vpc.workload_vpc[0].id, "")
  workload_subnets = try(data.aws_subnets.workload_subnets[0].ids, [])
  workload_azs     = [for s in data.aws_subnet.subnet_azs : s.availability_zone]

  cluster_arn                      = try(data.aws_eks_cluster.eks_cluster[0].arn, "")
  cluster_oidc_issuer              = try(data.aws_eks_cluster.eks_cluster[0].identity[0].oidc[0].issuer, "")
  cluster_oidc_arn                 = try(data.aws_iam_openid_connect_provider.oidc_provider[0].arn, "")
  cluster_permissions_boundary_arn = try(data.aws_iam_policy.permissions_boundary[0].arn, "")

  ado_squad_role = try(tolist(data.aws_iam_roles.ado_squad_roles[0].arns)[0], "")
  
  aws_management_org_id = tostring(local.platform_name) == "sandbox" ? "o-sams7uqgcr" : "o-67fnyra9vb"

  legacy_management_org_id = "o-bc5u6a9im6"

  grafana_endpoint  = [for name, value in module.param_grafana.values : value if endswith(name, "/grafana-endpoint")][0].value
  grafana_role_arn  = [for name, value in module.param_grafana.values : value if endswith(name, "/grafana-role-arn")][0].value
  grafana_key       = [for name, value in module.param_grafana.values : value if endswith(name, "/grafana-key")][0].value
  
  platform_name  = tostring(module.param_management_account.value) == "921670215108" ? "sandbox" : "live"
}
